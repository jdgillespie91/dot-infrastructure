AWSTemplateFormatVersion: "2010-09-09"
Description: "A test template"
Resources:
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsHostnames: "true"
  MySubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "eu-west-2a"
      CidrBlock: "10.0.0.0/24"
      MapPublicIpOnLaunch: "true"
      VpcId:
        Ref: MyVPC
  MyRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: MyVPC
  MySubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: MyRouteTable
      SubnetId:
        Ref: MySubnet
  MyInternetGateway:
    Type: "AWS::EC2::InternetGateway"
  MyRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: MyInternetGateway
      RouteTableId:
        Ref: MyRouteTable
  MyVPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId:
        Ref: MyInternetGateway
      VpcId:
        Ref: MyVPC
  MySecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Test security group"
      SecurityGroupIngress:
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
        -
          SourceSecurityGroupId:
            Ref: ELBSecurityGroup
          IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
      VpcId:
        Ref: MyVPC
  ELBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Test ELB security group"
      SecurityGroupIngress:
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
        -
          CidrIp: 0.0.0.0/0
          IpProtocol: "tcp"
          FromPort: 443
          ToPort: 443
      VpcId:
        Ref: MyVPC
