AWSTemplateFormatVersion: "2010-09-09"
Description: "The GoCD infrastructure for jakegillespie.me."
Parameters:
  NetworkStackName:
    Description: "The name of the stack that contains the networking resources to be used in this stack"
    Type: "String"
  ApplicationStackName:
    Description: "The name of the stack that contains the application resources to be used in this stack"
    Type: "String"
  GoServerAMI:
    Description: "The ID of the GoCD Server AMI"
    Type: "String"
  GoAgentAMI:
    Description: "The ID of the GoCD Agent AMI"
    Type: "String"
Resources:
  ServerEC2:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: "eu-west-2a"
      ImageId: !Ref GoServerAMI
      InstanceInitiatedShutdownBehavior: "terminate"
      InstanceType: "t2.medium"
      KeyName: "jakegillespie"
      SecurityGroupIds:
        - Fn::ImportValue: !Join [ "-", [ !Ref NetworkStackName, "load-balancer-security-group" ] ]
      SubnetId:
        Fn::ImportValue: !Join [ "-", [ !Ref NetworkStackName, "subnet-a" ] ]
  AgentEC2:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: "eu-west-2a"
      ImageId: !Ref GoAgentAMI
      InstanceInitiatedShutdownBehavior: "terminate"
      InstanceType: "t2.small"
      KeyName: "jakegillespie"
      SecurityGroupIds:
        - Fn::ImportValue: !Join [ "-", [ !Ref NetworkStackName, "server-security-group" ] ]
      SubnetId:
        Fn::ImportValue: !Join [ "-", [ !Ref NetworkStackName, "subnet-a" ] ]
  ServerTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200-399'
      Port: 8153
      Protocol: "HTTP"
      Targets:
        -
          Id: !Ref ServerEC2
          Port: 8153
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue: !Join [ "-", [ !Ref NetworkStackName, "vpc" ] ]
